/**
 * Thy Street
 * These are API's to easily manage your Thy Street device public pages. Thy Street APIs are completely RESTful and all our responses are returned in JSON.
 *
 * The version of the OpenAPI document: 0.0.2
 * Contact: support@thystreet.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OrderStatusDto from '../model/OrderStatusDto';

/**
* Order service.
* @module api/OrderApi
* @version 0.0.2
*/
export default class OrderApi {

    /**
    * Constructs a new OrderApi. 
    * @alias module:api/OrderApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * @param {String} orderToken This is the id recieved from the qrcode
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    getOrderByIdWithHttpInfo(orderToken) {
      let postBody = null;
      // verify the required parameter 'orderToken' is set
      if (orderToken === undefined || orderToken === null) {
        throw new Error("Missing the required parameter 'orderToken' when calling getOrderById");
      }

      let pathParams = {
        'orderToken': orderToken
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['thystreetAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/order/params/{orderToken}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {String} orderToken This is the id recieved from the qrcode
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    getOrderById(orderToken) {
      return this.getOrderByIdWithHttpInfo(orderToken)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * @param {module:model/OrderStatusDto} orderStatusDto 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    setStatusWithHttpInfo(orderStatusDto) {
      let postBody = orderStatusDto;
      // verify the required parameter 'orderStatusDto' is set
      if (orderStatusDto === undefined || orderStatusDto === null) {
        throw new Error("Missing the required parameter 'orderStatusDto' when calling setStatus");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['thystreetAuth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/order/status', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * @param {module:model/OrderStatusDto} orderStatusDto 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    setStatus(orderStatusDto) {
      return this.setStatusWithHttpInfo(orderStatusDto)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
